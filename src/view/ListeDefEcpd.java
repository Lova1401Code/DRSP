/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import common.AccesBdd;
import dao.CandidatDao;
import java.awt.Desktop;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import modele.CandidatModele;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Ramih
 */
public class ListeDefEcpd extends javax.swing.JInternalFrame {

    /**
     * Creates new form ListeDefEcpd
     */
    public ListeDefEcpd() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main = new javax.swing.JPanel();
        listeEcpdDef = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rechEcpd = new javax.swing.JTextField();
        btnRechEcpd = new javax.swing.JButton();
        desktopEcpd2 = new javax.swing.JDesktopPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableEcpd = new javax.swing.JTable();
        comboRechE = new javax.swing.JComboBox<>();
        AjoutCandEcpdDef = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        listeAjoutEcpdDef = new javax.swing.JPanel();
        rechEcpd1 = new javax.swing.JTextField();
        btnRechEcpd1 = new javax.swing.JButton();
        desktopEcpd3 = new javax.swing.JDesktopPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableEcpdS = new javax.swing.JTable();
        comboRechE1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        AjoutEcpdDef = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        edtNumDef = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        affNomCand = new javax.swing.JLabel();
        affPrenomCand = new javax.swing.JLabel();
        afficheImCand = new javax.swing.JLabel();
        ajoutNumDef = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        idDef = new javax.swing.JLabel();
        ret = new javax.swing.JButton();
        AjoutEcpdDef1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        edtNumDef1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        affNomCand1 = new javax.swing.JLabel();
        affPrenomCand1 = new javax.swing.JLabel();
        afficheImCand1 = new javax.swing.JLabel();
        modifEcpdDef = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        idDef1 = new javax.swing.JLabel();
        ret1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        main.setBackground(new java.awt.Color(255, 255, 255));

        listeEcpdDef.setBackground(new java.awt.Color(255, 255, 255));
        listeEcpdDef.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 51));
        jLabel3.setText("Liste Définitive ECPD ");
        listeEcpdDef.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, -1, -1));

        rechEcpd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rechEcpdMouseReleased(evt);
            }
        });
        listeEcpdDef.add(rechEcpd, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, 200, 40));

        btnRechEcpd.setBackground(new java.awt.Color(0, 51, 51));
        btnRechEcpd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRechEcpd.setForeground(new java.awt.Color(255, 255, 255));
        btnRechEcpd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png"))); // NOI18N
        btnRechEcpd.setText("Recherche");
        btnRechEcpd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRechEcpdActionPerformed(evt);
            }
        });
        listeEcpdDef.add(btnRechEcpd, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, 140, 40));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        tableEcpd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idCandidat", "numero d'ordre", "Nom ", "Prenom", "Corps", "Numero Téléphone", "Adresse"
            }
        ));
        tableEcpd.setRowHeight(17);
        tableEcpd.setSelectionBackground(new java.awt.Color(0, 204, 204));
        tableEcpd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableEcpdMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tableEcpd);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
        );

        desktopEcpd2.setLayer(jPanel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout desktopEcpd2Layout = new javax.swing.GroupLayout(desktopEcpd2);
        desktopEcpd2.setLayout(desktopEcpd2Layout);
        desktopEcpd2Layout.setHorizontalGroup(
            desktopEcpd2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        desktopEcpd2Layout.setVerticalGroup(
            desktopEcpd2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        listeEcpdDef.add(desktopEcpd2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 94, 880, 380));

        comboRechE.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        comboRechE.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Numero Définit", "Nom", "Prenom" }));
        listeEcpdDef.add(comboRechE, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, 140, 30));

        AjoutCandEcpdDef.setBackground(new java.awt.Color(0, 51, 51));
        AjoutCandEcpdDef.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        AjoutCandEcpdDef.setForeground(new java.awt.Color(255, 255, 255));
        AjoutCandEcpdDef.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/ad.png"))); // NOI18N
        AjoutCandEcpdDef.setText("Ajouter un candidat");
        AjoutCandEcpdDef.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                AjoutCandEcpdDefMouseReleased(evt);
            }
        });
        AjoutCandEcpdDef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjoutCandEcpdDefActionPerformed(evt);
            }
        });
        listeEcpdDef.add(AjoutCandEcpdDef, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 220, 40));

        btnExport.setBackground(new java.awt.Color(0, 50, 50));
        btnExport.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnExport.setForeground(new java.awt.Color(255, 255, 255));
        btnExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/exc.png"))); // NOI18N
        btnExport.setText("Exporter(Excel)");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });
        listeEcpdDef.add(btnExport, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 180, 40));

        listeAjoutEcpdDef.setBackground(new java.awt.Color(255, 255, 255));
        listeAjoutEcpdDef.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rechEcpd1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rechEcpd1MouseReleased(evt);
            }
        });
        listeAjoutEcpdDef.add(rechEcpd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, 200, 40));

        btnRechEcpd1.setBackground(new java.awt.Color(0, 51, 51));
        btnRechEcpd1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRechEcpd1.setForeground(new java.awt.Color(255, 255, 255));
        btnRechEcpd1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png"))); // NOI18N
        btnRechEcpd1.setText("Recherche");
        btnRechEcpd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRechEcpd1ActionPerformed(evt);
            }
        });
        listeAjoutEcpdDef.add(btnRechEcpd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, 140, 40));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        tableEcpdS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idCandidat", "numero d'ordre", "Nom ", "Prenom", "Corps", "Numero Téléphone", "Adresse"
            }
        ));
        tableEcpdS.setRowHeight(25);
        tableEcpdS.setSelectionBackground(new java.awt.Color(0, 204, 204));
        tableEcpdS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableEcpdSMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(tableEcpdS);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 890, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
        );

        desktopEcpd3.setLayer(jPanel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout desktopEcpd3Layout = new javax.swing.GroupLayout(desktopEcpd3);
        desktopEcpd3.setLayout(desktopEcpd3Layout);
        desktopEcpd3Layout.setHorizontalGroup(
            desktopEcpd3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        desktopEcpd3Layout.setVerticalGroup(
            desktopEcpd3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        listeAjoutEcpdDef.add(desktopEcpd3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 64, 890, 410));

        comboRechE1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        comboRechE1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Numero d'ordre", "Nom", "Prenom" }));
        listeAjoutEcpdDef.add(comboRechE1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, 140, 30));

        jButton1.setBackground(new java.awt.Color(0, 51, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/back.png"))); // NOI18N
        jButton1.setText("Retour à la liste");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        listeAjoutEcpdDef.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        AjoutEcpdDef.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(0, 51, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Ajout Numero Définitive");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Numero définitive");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Nom Candidat");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Prenom Candidat");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("IM Candidat");

        ajoutNumDef.setBackground(new java.awt.Color(0, 51, 51));
        ajoutNumDef.setForeground(new java.awt.Color(255, 255, 255));
        ajoutNumDef.setText("Ajouter");
        ajoutNumDef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajoutNumDefActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("ID");

        ret.setBackground(new java.awt.Color(0, 51, 51));
        ret.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ret.setForeground(new java.awt.Color(255, 255, 255));
        ret.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/back.png"))); // NOI18N
        ret.setText("Retour à la liste");
        ret.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AjoutEcpdDefLayout = new javax.swing.GroupLayout(AjoutEcpdDef);
        AjoutEcpdDef.setLayout(AjoutEcpdDefLayout);
        AjoutEcpdDefLayout.setHorizontalGroup(
            AjoutEcpdDefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AjoutEcpdDefLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ret, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AjoutEcpdDefLayout.createSequentialGroup()
                .addContainerGap(222, Short.MAX_VALUE)
                .addGroup(AjoutEcpdDefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ajoutNumDef, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AjoutEcpdDefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(AjoutEcpdDefLayout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(idDef, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(AjoutEcpdDefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(AjoutEcpdDefLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(afficheImCand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(AjoutEcpdDefLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(affPrenomCand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(AjoutEcpdDefLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(affNomCand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(AjoutEcpdDefLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(edtNumDef, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(256, 256, 256))
        );
        AjoutEcpdDefLayout.setVerticalGroup(
            AjoutEcpdDefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AjoutEcpdDefLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AjoutEcpdDefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ret))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AjoutEcpdDefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(edtNumDef, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AjoutEcpdDefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(affNomCand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AjoutEcpdDefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(affPrenomCand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AjoutEcpdDefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(afficheImCand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AjoutEcpdDefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idDef, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addGap(41, 41, 41)
                .addComponent(ajoutNumDef, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(152, 152, 152))
        );

        AjoutEcpdDef1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setBackground(new java.awt.Color(0, 51, 51));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Modification Numero Définitive");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Numero définitive");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Nom Candidat");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Prenom Candidat");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("IM Candidat");

        modifEcpdDef.setBackground(new java.awt.Color(0, 51, 51));
        modifEcpdDef.setForeground(new java.awt.Color(255, 255, 255));
        modifEcpdDef.setText("Modifier");
        modifEcpdDef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifEcpdDefActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("ID");

        ret1.setBackground(new java.awt.Color(0, 51, 51));
        ret1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ret1.setForeground(new java.awt.Color(255, 255, 255));
        ret1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/back.png"))); // NOI18N
        ret1.setText("Retour à la liste");
        ret1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ret1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AjoutEcpdDef1Layout = new javax.swing.GroupLayout(AjoutEcpdDef1);
        AjoutEcpdDef1.setLayout(AjoutEcpdDef1Layout);
        AjoutEcpdDef1Layout.setHorizontalGroup(
            AjoutEcpdDef1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AjoutEcpdDef1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ret1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AjoutEcpdDef1Layout.createSequentialGroup()
                .addContainerGap(232, Short.MAX_VALUE)
                .addGroup(AjoutEcpdDef1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(modifEcpdDef, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AjoutEcpdDef1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(AjoutEcpdDef1Layout.createSequentialGroup()
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(idDef1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(AjoutEcpdDef1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(AjoutEcpdDef1Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(afficheImCand1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(AjoutEcpdDef1Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(affPrenomCand1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(AjoutEcpdDef1Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(affNomCand1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(AjoutEcpdDef1Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(edtNumDef1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(256, 256, 256))
        );
        AjoutEcpdDef1Layout.setVerticalGroup(
            AjoutEcpdDef1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AjoutEcpdDef1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AjoutEcpdDef1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ret1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AjoutEcpdDef1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(edtNumDef1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AjoutEcpdDef1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(affNomCand1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AjoutEcpdDef1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(affPrenomCand1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AjoutEcpdDef1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(afficheImCand1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AjoutEcpdDef1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idDef1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addGap(41, 41, 41)
                .addComponent(modifEcpdDef, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(152, 152, 152))
        );

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addComponent(listeEcpdDef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainLayout.createSequentialGroup()
                    .addComponent(listeAjoutEcpdDef, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AjoutEcpdDef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(20, Short.MAX_VALUE)))
            .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AjoutEcpdDef1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addComponent(listeEcpdDef, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 62, Short.MAX_VALUE))
            .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainLayout.createSequentialGroup()
                    .addComponent(listeAjoutEcpdDef, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 52, Short.MAX_VALUE)))
            .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainLayout.createSequentialGroup()
                    .addContainerGap(19, Short.MAX_VALUE)
                    .addComponent(AjoutEcpdDef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(19, Short.MAX_VALUE)))
            .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AjoutEcpdDef1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(main, javax.swing.GroupLayout.PREFERRED_SIZE, 900, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        try {
            main.removeAll();
            main.repaint();
            main.revalidate();
            main.add(this.listeEcpdDef);
            main.repaint();
            main.revalidate();
            this.tableListeEcpd();

        } catch (Exception e) {

        }
    }//GEN-LAST:event_formInternalFrameOpened
    public void tableListeEcpd() {
        String[] ecpd = {"IdCandidat", "numero Définit", "Nom", "Prénom", "Corps", "Numéro télephone", "Adresse"};
        String[] afficherEcpd = new String[12];
        DefaultTableModel modelEcpd = new DefaultTableModel(null, ecpd);
        try {
            String sqlE = "SELECT * FROM candidat WHERE (corps_Cand = 'ECPD' and numDefEcpd != '0')";
            AccesBdd bdd1 = new AccesBdd();
            bdd1.loadDriver();
            ResultSet resultat = bdd1.executeSelect(sqlE);
            while (resultat.next()) {
                afficherEcpd[0] = String.valueOf(resultat.getInt("idCand"));
                afficherEcpd[1] = resultat.getString("numDefEcpd");
                afficherEcpd[2] = resultat.getString("nom_Cand");
                afficherEcpd[3] = resultat.getString("prenom_Cand");
                afficherEcpd[4] = resultat.getString("corps_Cand");
                afficherEcpd[5] = resultat.getString("numTel_Cand");
                afficherEcpd[6] = resultat.getString("adresse_Cand");
                modelEcpd.addRow(afficherEcpd);
            }
            this.tableEcpd.setModel(modelEcpd);
            bdd1.closeConnection();
        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(null, "erreur se trouve ice " + ex.getMessage());
        }
    }

    public void tableListeEcpd1() {
        String[] ecpd = {"IdCandidat", "numero d'ordre", "Nom", "Prénom", "Corps", "Numéro télephone", "Adresse"};
        String[] afficherEcpd = new String[12];
        DefaultTableModel modelEcpd = new DefaultTableModel(null, ecpd);
        try {
            String sqlE = "SELECT * FROM candidat WHERE (corps_Cand = 'ECPD' and numDefEcpd = '0')";
            AccesBdd bdd1 = new AccesBdd();
            bdd1.loadDriver();
            ResultSet resultat = bdd1.executeSelect(sqlE);
            while (resultat.next()) {
                afficherEcpd[0] = String.valueOf(resultat.getInt("idCand"));
                afficherEcpd[1] = String.valueOf(resultat.getInt("numOrdre"));
                afficherEcpd[2] = resultat.getString("nom_Cand");
                afficherEcpd[3] = resultat.getString("prenom_Cand");
                afficherEcpd[4] = resultat.getString("corps_Cand");
                afficherEcpd[5] = resultat.getString("numTel_Cand");
                afficherEcpd[6] = resultat.getString("adresse_Cand");
                modelEcpd.addRow(afficherEcpd);
            }
            this.tableEcpdS.setModel(modelEcpd);
            bdd1.closeConnection();
        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(null, "erreur se trouve ice " + ex.getMessage());
        }
    }

    private void rechEcpdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rechEcpdMouseReleased

    }//GEN-LAST:event_rechEcpdMouseReleased

    private void btnRechEcpdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRechEcpdActionPerformed
        String idRechEcpd = rechEcpd.getText();
        rechEcpd.setText("");
        String[] ecpd = {"IdCandidat", "numero Définit", "Nom", "Prénom", "Corps", "Numéro télephone", "Adresse"};
        String[] afficherEcpd = new String[12];
        DefaultTableModel modelEcpd = new DefaultTableModel(null, ecpd);
        if (comboRechE.getSelectedItem().toString() == "Nom") {
            try {
                String sqlE = "SELECT * FROM candidat WHERE (corps_Cand = 'ECPD' and numDefEcpd != '0') and nom_Cand like '%" + idRechEcpd + "%'";
                AccesBdd bdd1 = new AccesBdd();
                bdd1.loadDriver();
                ResultSet resultat = bdd1.executeSelect(sqlE);
                while (resultat.next()) {
                    afficherEcpd[0] = String.valueOf(resultat.getInt("idCand"));
                    afficherEcpd[1] = resultat.getString("numDefEcpd");
                    afficherEcpd[2] = resultat.getString("nom_Cand");
                    afficherEcpd[3] = resultat.getString("prenom_Cand");
                    afficherEcpd[4] = resultat.getString("corps_Cand");
                    afficherEcpd[5] = resultat.getString("numTel_Cand");
                    afficherEcpd[6] = resultat.getString("adresse_Cand");
                    modelEcpd.addRow(afficherEcpd);
                }
                this.tableEcpd.setModel(modelEcpd);
                bdd1.closeConnection();
            } catch (SQLException ex) {
                JOptionPane.showConfirmDialog(null, "erreur se trouve ice " + ex.getMessage());
            }
        } else if (comboRechE.getSelectedItem().toString() == "Numero Définit") {
            try {
                String sqlE = "SELECT * FROM candidat WHERE (corps_Cand = 'ECPD' and numDefEcpd != '0') and numDefEcpd like '%" + idRechEcpd + "%'";
                AccesBdd bdd1 = new AccesBdd();
                bdd1.loadDriver();
                ResultSet resultat = bdd1.executeSelect(sqlE);
                while (resultat.next()) {
                    afficherEcpd[0] = String.valueOf(resultat.getInt("idCand"));
                    afficherEcpd[1] = resultat.getString("numDefEcpd");
                    afficherEcpd[2] = resultat.getString("nom_Cand");
                    afficherEcpd[3] = resultat.getString("prenom_Cand");
                    afficherEcpd[4] = resultat.getString("corps_Cand");
                    afficherEcpd[5] = resultat.getString("numTel_Cand");
                    afficherEcpd[6] = resultat.getString("adresse_Cand");
                    modelEcpd.addRow(afficherEcpd);
                }
                this.tableEcpd.setModel(modelEcpd);
                bdd1.closeConnection();
            } catch (SQLException ex) {
                JOptionPane.showConfirmDialog(null, "erreur se trouve ice " + ex.getMessage());
            }
        } else if (comboRechE.getSelectedItem().toString() == "Prenom") {
            try {
                String sqlE = "SELECT * FROM candidat WHERE (corps_Cand = 'ECPD' and numDefEcpd != '0') and prenom_Cand like '%" + idRechEcpd + "%'";
                AccesBdd bdd1 = new AccesBdd();
                bdd1.loadDriver();
                ResultSet resultat = bdd1.executeSelect(sqlE);
                while (resultat.next()) {
                    afficherEcpd[0] = String.valueOf(resultat.getInt("idCand"));
                    afficherEcpd[1] = resultat.getString("numDefEcpd");
                    afficherEcpd[2] = resultat.getString("nom_Cand");
                    afficherEcpd[3] = resultat.getString("prenom_Cand");
                    afficherEcpd[4] = resultat.getString("corps_Cand");
                    afficherEcpd[5] = resultat.getString("numTel_Cand");
                    afficherEcpd[6] = resultat.getString("adresse_Cand");
                    modelEcpd.addRow(afficherEcpd);
                }
                this.tableEcpd.setModel(modelEcpd);
                bdd1.closeConnection();
            } catch (SQLException ex) {
                JOptionPane.showConfirmDialog(null, "erreur se trouve ice " + ex.getMessage());
            }
        } else {
            this.tableEcpd.setModel(modelEcpd);
        }
    }//GEN-LAST:event_btnRechEcpdActionPerformed

    private void tableEcpdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEcpdMouseReleased
        try {
            main.removeAll();
            main.repaint();
            main.revalidate();
            main.add(this.AjoutEcpdDef1);
            main.repaint();
            main.revalidate();
            int i = this.tableEcpd.getSelectedRow();
            DefaultTableModel modelC = (DefaultTableModel) this.tableEcpd.getModel();
            String idc = (String) modelC.getValueAt(i, 0);

            try {
                String sqlId2 = "SELECT * FROM candidat WHERE idCand='" + idc + "' ";
                AccesBdd bdd2 = new AccesBdd();
                bdd2.loadDriver();
                ResultSet resultatId = bdd2.executeSelect(sqlId2);
                while (resultatId.next()) {
                    String idCa = resultatId.getString("idCand");
                    edtNumDef1.setText(resultatId.getString("numDefEcpd"));
                    affNomCand1.setText(resultatId.getString("nom_Cand"));
                    affPrenomCand1.setText(resultatId.getString("prenom_Cand"));
                    afficheImCand1.setText(resultatId.getString("numDefEcpd"));
                    idDef1.setText(resultatId.getString("idCand"));
                }
                bdd2.closeConnection();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_tableEcpdMouseReleased

    private void rechEcpd1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rechEcpd1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_rechEcpd1MouseReleased

    private void btnRechEcpd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRechEcpd1ActionPerformed
        String idRechEcpd = rechEcpd1.getText();
        rechEcpd1.setText("");
        String[] ecpd = {"IdCandidat", "numero d'ordre", "Nom", "Prénom", "Corps", "Numéro télephone", "Adresse"};
        String[] afficherEcpd = new String[12];
        DefaultTableModel modelEcpd = new DefaultTableModel(null, ecpd);
        if (comboRechE1.getSelectedItem().toString() == "Nom") {
            try {
                String sqlE = "SELECT * FROM candidat WHERE (corps_Cand = 'ECPD' and numDefEcpd = '0') and nom_Cand like '%" + idRechEcpd + "%'";
                AccesBdd bdd1 = new AccesBdd();
                bdd1.loadDriver();
                ResultSet resultat = bdd1.executeSelect(sqlE);
                while (resultat.next()) {
                    afficherEcpd[0] = String.valueOf(resultat.getInt("idCand"));
                    afficherEcpd[1] = String.valueOf(resultat.getInt("numOrdre"));
                    afficherEcpd[2] = resultat.getString("nom_Cand");
                    afficherEcpd[3] = resultat.getString("prenom_Cand");
                    afficherEcpd[4] = resultat.getString("corps_Cand");
                    afficherEcpd[5] = resultat.getString("numTel_Cand");
                    afficherEcpd[6] = resultat.getString("adresse_Cand");
                    modelEcpd.addRow(afficherEcpd);
                }
                this.tableEcpdS.setModel(modelEcpd);
                bdd1.closeConnection();
            } catch (SQLException ex) {
                JOptionPane.showConfirmDialog(null, "erreur se trouve ice " + ex.getMessage());
            }
        } else if (comboRechE1.getSelectedItem().toString() == "Numero d'ordre") {
            try {
                String sqlE = "SELECT * FROM candidat WHERE (corps_Cand = 'ECPD' and numDefEcpd = '0') and numOrdre like '%" + idRechEcpd + "%'";
                AccesBdd bdd1 = new AccesBdd();
                bdd1.loadDriver();
                ResultSet resultat = bdd1.executeSelect(sqlE);
                while (resultat.next()) {
                    afficherEcpd[0] = String.valueOf(resultat.getInt("idCand"));
                    afficherEcpd[1] = String.valueOf(resultat.getInt("numOrdre"));
                    afficherEcpd[2] = resultat.getString("nom_Cand");
                    afficherEcpd[3] = resultat.getString("prenom_Cand");
                    afficherEcpd[4] = resultat.getString("corps_Cand");
                    afficherEcpd[5] = resultat.getString("numTel_Cand");
                    afficherEcpd[6] = resultat.getString("adresse_Cand");
                    modelEcpd.addRow(afficherEcpd);
                }
                this.tableEcpdS.setModel(modelEcpd);
                bdd1.closeConnection();
            } catch (SQLException ex) {
                JOptionPane.showConfirmDialog(null, "erreur se trouve ice " + ex.getMessage());
            }
        } else if (comboRechE1.getSelectedItem().toString() == "Prenom") {
            try {
                String sqlE = "SELECT * FROM candidat WHERE (corps_Cand = 'ECPD' and numDefEcpd = '0') and prenom_Cand like '%" + idRechEcpd + "%'";
                AccesBdd bdd1 = new AccesBdd();
                bdd1.loadDriver();
                ResultSet resultat = bdd1.executeSelect(sqlE);
                while (resultat.next()) {
                    afficherEcpd[0] = String.valueOf(resultat.getInt("idCand"));
                    afficherEcpd[1] = String.valueOf(resultat.getInt("numOrdre"));
                    afficherEcpd[2] = resultat.getString("nom_Cand");
                    afficherEcpd[3] = resultat.getString("prenom_Cand");
                    afficherEcpd[4] = resultat.getString("corps_Cand");
                    afficherEcpd[5] = resultat.getString("numTel_Cand");
                    afficherEcpd[6] = resultat.getString("adresse_Cand");
                    modelEcpd.addRow(afficherEcpd);
                }
                this.tableEcpdS.setModel(modelEcpd);
                bdd1.closeConnection();
            } catch (SQLException ex) {
                JOptionPane.showConfirmDialog(null, "erreur se trouve ice " + ex.getMessage());
            }
        } else {
            this.tableEcpdS.setModel(modelEcpd);
        }
    }//GEN-LAST:event_btnRechEcpd1ActionPerformed

    private void AjoutCandEcpdDefMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AjoutCandEcpdDefMouseReleased

    }//GEN-LAST:event_AjoutCandEcpdDefMouseReleased

    private void AjoutCandEcpdDefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjoutCandEcpdDefActionPerformed
        this.tableListeEcpd1();
        try {
            this.tableListeEcpd1();
            main.removeAll();
            main.repaint();
            main.revalidate();
            main.add(this.listeAjoutEcpdDef);
            main.repaint();
            main.revalidate();
        } catch (Exception e) {

        }

    }//GEN-LAST:event_AjoutCandEcpdDefActionPerformed

    private void tableEcpdSMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEcpdSMouseReleased
        try {
            main.removeAll();
            main.repaint();
            main.revalidate();
            main.add(AjoutEcpdDef);
            main.repaint();
            main.revalidate();
            int j = this.tableEcpdS.getSelectedRow();
            DefaultTableModel modelDef = (DefaultTableModel) tableEcpdS.getModel();
            String idc = (String) modelDef.getValueAt(j, 0);
            try {
                String sqlId2 = "SELECT * FROM candidat WHERE idCand='" + idc + "' ";
                AccesBdd bdd2 = new AccesBdd();
                bdd2.loadDriver();
                ResultSet resultatId = bdd2.executeSelect(sqlId2);
                while (resultatId.next()) {
                    String idCa = resultatId.getString("idCand");
                    affNomCand.setText(resultatId.getString("nom_Cand"));
                    affPrenomCand.setText(resultatId.getString("prenom_Cand"));
                    afficheImCand.setText(resultatId.getString("numDefEcpd"));
                    idDef.setText(resultatId.getString("idCand"));
                }
                bdd2.closeConnection();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } catch (Exception e) {

        }

    }//GEN-LAST:event_tableEcpdSMouseReleased

    private void ajoutNumDefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajoutNumDefActionPerformed
        String numDefEcpd = edtNumDef.getText();
        String idDefinit = idDef.getText();
        CandidatModele can = new CandidatModele();
        can.setNumDef(numDefEcpd);
        can.setIdCand(idDefinit);
        CandidatDao cand = new CandidatDao();
        cand.updateNumDefEcpd(can);
        JOptionPane.showMessageDialog(null, "Candidat Ajouté");
        edtNumDef.setText("");
        this.tableListeEcpd1();
        try {
            this.tableListeEcpd1();
            main.removeAll();
            main.repaint();
            main.revalidate();
            main.add(this.listeAjoutEcpdDef);
            main.repaint();
            main.revalidate();
        } catch (Exception e) {

        }
    }//GEN-LAST:event_ajoutNumDefActionPerformed

    private void retActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retActionPerformed
        try {
            this.tableListeEcpd1();
            main.removeAll();
            main.repaint();
            main.revalidate();
            main.add(this.listeAjoutEcpdDef);
            main.repaint();
            main.revalidate();
        } catch (Exception e) {

        }
    }//GEN-LAST:event_retActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            this.tableListeEcpd();
            main.removeAll();
            main.repaint();
            main.revalidate();
            main.add(listeEcpdDef);
            main.repaint();
            main.revalidate();

        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void modifEcpdDefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifEcpdDefActionPerformed
        String numDefEcpd = edtNumDef1.getText();
        String idDefinit = idDef1.getText();
        CandidatModele can = new CandidatModele();
        can.setNumDef(numDefEcpd);
        can.setIdCand(idDefinit);
        CandidatDao cand = new CandidatDao();
        cand.updateNumDefEcpd(can);
        JOptionPane.showMessageDialog(null, "Candidat Modifié");
        edtNumDef1.setText("");
        this.tableListeEcpd();
        try {
            this.tableListeEcpd();
            main.removeAll();
            main.repaint();
            main.revalidate();
            main.add(this.listeEcpdDef);
            main.repaint();
            main.revalidate();
        } catch (Exception e) {

        }
    }//GEN-LAST:event_modifEcpdDefActionPerformed

    private void ret1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ret1ActionPerformed
        try {
            this.tableListeEcpd();
            main.removeAll();
            main.repaint();
            main.revalidate();
            main.add(listeEcpdDef);
            main.repaint();
            main.revalidate();

        } catch (Exception e) {

        }
    }//GEN-LAST:event_ret1ActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        try {
            JFileChooser jFilechooser = new JFileChooser();
            jFilechooser.showSaveDialog(this);
            File saveFile = jFilechooser.getSelectedFile();

            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("Candidats");
                Row rowCol = sheet.createRow(0);
                for (int i = 0; i < tableEcpd.getColumnCount(); i++) {
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(tableEcpd.getColumnName(i));
                }
                for (int j = 0; j < tableEcpd.getRowCount(); j++) {
                    Row row = sheet.createRow(j);
                    for (int k = 0; k < tableEcpd.getColumnCount(); k++) {
                        Cell cell = row.createCell(k);
                        if (tableEcpd.getValueAt(j, k) != null) {
                            cell.setCellValue(tableEcpd.getValueAt(j, k).toString());
                        }

                    }
                }
                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                out.close();
                this.openFile(saveFile.toString());
                
            }else{
                JOptionPane.showMessageDialog(null, "il y a une erreur");
            }

        } catch (Exception e) {
        }
        /*FileOutputStream excelFou = null;
        BufferedOutputStream excelBOU = null;
        XSSFWorkbook excelJTableExporter = null;
        JFileChooser excelFileChooser = new JFileChooser("C:\\Users\\Ramih\\Documents");
        excelFileChooser.setDialogTitle("Enregistrement de la liste définitive ECPD");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlxm");
        excelFileChooser.setFileFilter(fnef);
        int excelChooser = excelFileChooser.showSaveDialog(null);
        if (excelChooser == JFileChooser.APPROVE_OPTION) {
            excelJTableExporter = new XSSFWorkbook();
            XSSFSheet excelSheet = excelJTableExporter.createSheet("JTable sheet");

            for (int i = 0; i < tableEcpd.getRowCount(); i++) {
                XSSFRow excelRow = excelSheet.createRow(i);
                for (int j = 0; j < tableEcpd.getRowCount(); j++) {

                    try {
                        XSSFCell excelCell = excelRow.createCell(j);
                        excelCell.setCellValue(tableEcpd.getValueAt(i, j).toString());
                        excelFou = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                        excelBOU = new BufferedOutputStream(excelFou);
                        excelJTableExporter.write(excelBOU);
                        JOptionPane.showMessageDialog(null, "Exportation Succès");
                    } catch (FileNotFoundException ex) {
                        ex.printStackTrace();
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    } finally {
                        try {
                            /*if (excelBOU != null) {
                                excelBOU.close();
                            }
                            if (excelFou != null) {
                                excelFou.close();
                            }

                            if (excelJTableExporter != null) {
                                excelJTableExporter.close();
                            }
                        } catch (IOException ex) {
                            ex.printStackTrace();
                        }
                    }
                }
            }
        }*/
    }//GEN-LAST:event_btnExportActionPerformed

    public void openFile(String file){
        try {
            File path = new File(file);
            Desktop.getDesktop().open(path);
        } catch (IOException e) {
            System.out.println(e);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AjoutCandEcpdDef;
    private javax.swing.JPanel AjoutEcpdDef;
    private javax.swing.JPanel AjoutEcpdDef1;
    private javax.swing.JLabel affNomCand;
    private javax.swing.JLabel affNomCand1;
    private javax.swing.JLabel affPrenomCand;
    private javax.swing.JLabel affPrenomCand1;
    private javax.swing.JLabel afficheImCand;
    private javax.swing.JLabel afficheImCand1;
    private javax.swing.JButton ajoutNumDef;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnRechEcpd;
    private javax.swing.JButton btnRechEcpd1;
    private javax.swing.JComboBox<String> comboRechE;
    private javax.swing.JComboBox<String> comboRechE1;
    private javax.swing.JDesktopPane desktopEcpd2;
    private javax.swing.JDesktopPane desktopEcpd3;
    private javax.swing.JTextField edtNumDef;
    private javax.swing.JTextField edtNumDef1;
    private javax.swing.JLabel idDef;
    private javax.swing.JLabel idDef1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel listeAjoutEcpdDef;
    private javax.swing.JPanel listeEcpdDef;
    private javax.swing.JPanel main;
    private javax.swing.JButton modifEcpdDef;
    private javax.swing.JTextField rechEcpd;
    private javax.swing.JTextField rechEcpd1;
    private javax.swing.JButton ret;
    private javax.swing.JButton ret1;
    private javax.swing.JTable tableEcpd;
    private javax.swing.JTable tableEcpdS;
    // End of variables declaration//GEN-END:variables
}
