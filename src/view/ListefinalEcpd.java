/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import common.AccesBdd;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ramih
 */
public class ListefinalEcpd extends javax.swing.JInternalFrame {

    /**
     * Creates new form ListefinalEcpd
     */
    public ListefinalEcpd() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main = new javax.swing.JPanel();
        listeEcpdFinal = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rechEcpd = new javax.swing.JTextField();
        btnRechEcpd = new javax.swing.JButton();
        desktopEcpd2 = new javax.swing.JDesktopPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableEcpd = new javax.swing.JTable();
        comboRechE = new javax.swing.JComboBox<>();
        AjoutCandEcpdDef = new javax.swing.JButton();
        btnImprim = new javax.swing.JButton();
        listeAjoutEcpdFinal = new javax.swing.JPanel();
        rechEcpd1 = new javax.swing.JTextField();
        btnRechEcpd1 = new javax.swing.JButton();
        desktopEcpd3 = new javax.swing.JDesktopPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableEcpdS = new javax.swing.JTable();
        comboRechE1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        main.setBackground(new java.awt.Color(255, 255, 255));

        listeEcpdFinal.setBackground(new java.awt.Color(255, 255, 255));
        listeEcpdFinal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 51));
        jLabel3.setText("Liste Finale ECPD ");
        listeEcpdFinal.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, -1, -1));

        rechEcpd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rechEcpdMouseReleased(evt);
            }
        });
        listeEcpdFinal.add(rechEcpd, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, 200, 40));

        btnRechEcpd.setBackground(new java.awt.Color(0, 51, 51));
        btnRechEcpd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRechEcpd.setForeground(new java.awt.Color(255, 255, 255));
        btnRechEcpd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png"))); // NOI18N
        btnRechEcpd.setText("Recherche");
        btnRechEcpd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRechEcpdActionPerformed(evt);
            }
        });
        listeEcpdFinal.add(btnRechEcpd, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, 140, 40));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        tableEcpd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idCandidat", "numero d'ordre", "Nom ", "Prenom", "Corps", "Numero Téléphone", "Adresse"
            }
        ));
        tableEcpd.setRowHeight(17);
        tableEcpd.setSelectionBackground(new java.awt.Color(0, 204, 204));
        tableEcpd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableEcpdMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tableEcpd);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                .addContainerGap())
        );

        desktopEcpd2.setLayer(jPanel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout desktopEcpd2Layout = new javax.swing.GroupLayout(desktopEcpd2);
        desktopEcpd2.setLayout(desktopEcpd2Layout);
        desktopEcpd2Layout.setHorizontalGroup(
            desktopEcpd2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        desktopEcpd2Layout.setVerticalGroup(
            desktopEcpd2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        listeEcpdFinal.add(desktopEcpd2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 94, 890, 380));

        comboRechE.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        comboRechE.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Numero Définit", "Nom", "Prenom" }));
        listeEcpdFinal.add(comboRechE, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, 140, 30));

        AjoutCandEcpdDef.setBackground(new java.awt.Color(0, 51, 51));
        AjoutCandEcpdDef.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        AjoutCandEcpdDef.setForeground(new java.awt.Color(255, 255, 255));
        AjoutCandEcpdDef.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/ad.png"))); // NOI18N
        AjoutCandEcpdDef.setText("Ajouter un candidat");
        AjoutCandEcpdDef.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                AjoutCandEcpdDefMouseReleased(evt);
            }
        });
        AjoutCandEcpdDef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjoutCandEcpdDefActionPerformed(evt);
            }
        });
        listeEcpdFinal.add(AjoutCandEcpdDef, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 220, 40));

        btnImprim.setBackground(new java.awt.Color(0, 50, 50));
        btnImprim.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnImprim.setForeground(new java.awt.Color(255, 255, 255));
        btnImprim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/pr.png"))); // NOI18N
        btnImprim.setText("Imprimer");
        btnImprim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimActionPerformed(evt);
            }
        });
        listeEcpdFinal.add(btnImprim, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 150, 40));

        listeAjoutEcpdFinal.setBackground(new java.awt.Color(255, 255, 255));
        listeAjoutEcpdFinal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rechEcpd1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rechEcpd1MouseReleased(evt);
            }
        });
        listeAjoutEcpdFinal.add(rechEcpd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, 200, 40));

        btnRechEcpd1.setBackground(new java.awt.Color(0, 51, 51));
        btnRechEcpd1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRechEcpd1.setForeground(new java.awt.Color(255, 255, 255));
        btnRechEcpd1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png"))); // NOI18N
        btnRechEcpd1.setText("Recherche");
        btnRechEcpd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRechEcpd1ActionPerformed(evt);
            }
        });
        listeAjoutEcpdFinal.add(btnRechEcpd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, 140, 40));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        tableEcpdS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idCandidat", "numero d'ordre", "Nom ", "Prenom", "Corps", "Numero Téléphone", "Adresse"
            }
        ));
        tableEcpdS.setRowHeight(17);
        tableEcpdS.setSelectionBackground(new java.awt.Color(0, 204, 204));
        tableEcpdS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableEcpdSMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(tableEcpdS);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 890, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
        );

        desktopEcpd3.setLayer(jPanel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout desktopEcpd3Layout = new javax.swing.GroupLayout(desktopEcpd3);
        desktopEcpd3.setLayout(desktopEcpd3Layout);
        desktopEcpd3Layout.setHorizontalGroup(
            desktopEcpd3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        desktopEcpd3Layout.setVerticalGroup(
            desktopEcpd3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        listeAjoutEcpdFinal.add(desktopEcpd3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 64, 890, 410));

        comboRechE1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        comboRechE1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Numero Définitive", "Nom", "Prenom" }));
        listeAjoutEcpdFinal.add(comboRechE1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, 140, 30));

        jButton1.setBackground(new java.awt.Color(0, 51, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/back.png"))); // NOI18N
        jButton1.setText("Retour à la liste");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        listeAjoutEcpdFinal.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addComponent(listeEcpdFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainLayout.createSequentialGroup()
                    .addComponent(listeAjoutEcpdFinal, javax.swing.GroupLayout.DEFAULT_SIZE, 890, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addComponent(listeEcpdFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainLayout.createSequentialGroup()
                    .addComponent(listeAjoutEcpdFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 18, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rechEcpdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rechEcpdMouseReleased

    }//GEN-LAST:event_rechEcpdMouseReleased
    public void tableListeEcpd(){
        String []ecpd = {"IdCandidat", "numero Définit", "Nom", "Prénom", "Corps", "Numéro télephone", "Adresse"};
        String []afficherEcpd = new String[12];
        DefaultTableModel modelEcpd = new DefaultTableModel(null, ecpd);
        try {
            String sqlE = "SELECT * FROM candidat WHERE (corps_Cand = 'ECPD' and numDefEcpd != '0') and signe = 'tafa'";
            AccesBdd bdd1 = new AccesBdd();
            bdd1.loadDriver();
            ResultSet resultat = bdd1.executeSelect(sqlE);
            while (resultat.next()){
                  afficherEcpd[0] = String.valueOf(resultat.getInt("idCand"));
                  afficherEcpd[1] = resultat.getString("numDefEcpd");
                  afficherEcpd[2] = resultat.getString("nom_Cand");
                  afficherEcpd[3] = resultat.getString("prenom_Cand");
                  afficherEcpd[4] = resultat.getString("corps_Cand");
                  afficherEcpd[5] = resultat.getString("numTel_Cand");
                  afficherEcpd[6] = resultat.getString("adresse_Cand");
                  modelEcpd.addRow(afficherEcpd);
            }
            this.tableEcpd.setModel(modelEcpd);
            bdd1.closeConnection();
        } catch (SQLException ex) {
           JOptionPane.showConfirmDialog(null, "erreur se trouve ice "+ex.getMessage());
        }
    }
    public void tableListeEcpd1(){
        String []ecpd = {"IdCandidat", "numero Définit", "Nom", "Prénom", "Corps", "Numéro télephone", "Adresse"};
        String []afficherEcpd = new String[12];
        DefaultTableModel modelEcpd = new DefaultTableModel(null, ecpd);
        try {
            String sqlE = "SELECT * FROM candidat WHERE (corps_Cand = 'ECPD' and numDefEcpd != '0') and signe = 'tsytafa'";
            AccesBdd bdd1 = new AccesBdd();
            bdd1.loadDriver();
            ResultSet resultat = bdd1.executeSelect(sqlE);
            while (resultat.next()){
                  afficherEcpd[0] = String.valueOf(resultat.getInt("idCand"));
                  afficherEcpd[1] = resultat.getString("numDefEcpd");
                  afficherEcpd[2] = resultat.getString("nom_Cand");
                  afficherEcpd[3] = resultat.getString("prenom_Cand");
                  afficherEcpd[4] = resultat.getString("corps_Cand");
                  afficherEcpd[5] = resultat.getString("numTel_Cand");
                  afficherEcpd[6] = resultat.getString("adresse_Cand");
                  modelEcpd.addRow(afficherEcpd);
            }
            this.tableEcpdS.setModel(modelEcpd);
            bdd1.closeConnection();
        } catch (SQLException ex) {
           JOptionPane.showConfirmDialog(null, "erreur se trouve ice "+ex.getMessage());
        }
    }
    
   
    private void btnRechEcpdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRechEcpdActionPerformed
        String idRechEcpd = rechEcpd.getText();
        rechEcpd.setText("");
        String []ecpd = {"IdCandidat", "numero Définit", "Nom", "Prénom", "Corps", "Numéro télephone", "Adresse"};
        String []afficherEcpd = new String[12];
        DefaultTableModel modelEcpd = new DefaultTableModel(null, ecpd);
        if (comboRechE.getSelectedItem().toString() == "Nom"){
            try {
                String sqlE = "SELECT * FROM candidat WHERE (corps_Cand = 'ECPD' and numDefEcpd != '0') and (nom_Cand like '%"+idRechEcpd+"%' and signe ='tafa')";
                AccesBdd bdd1 = new AccesBdd();
                bdd1.loadDriver();
                ResultSet resultat = bdd1.executeSelect(sqlE);
                while (resultat.next()){
                    afficherEcpd[0] = String.valueOf(resultat.getInt("idCand"));
                    afficherEcpd[1] = resultat.getString("numDefEcpd");
                    afficherEcpd[2] = resultat.getString("nom_Cand");
                    afficherEcpd[3] = resultat.getString("prenom_Cand");
                    afficherEcpd[4] = resultat.getString("corps_Cand");
                    afficherEcpd[5] = resultat.getString("numTel_Cand");
                    afficherEcpd[6] = resultat.getString("adresse_Cand");
                    modelEcpd.addRow(afficherEcpd);
                }
                this.tableEcpd.setModel(modelEcpd);
                bdd1.closeConnection();
            } catch (SQLException ex) {
                JOptionPane.showConfirmDialog(null, "erreur se trouve ice "+ex.getMessage());
            }
        }else if (comboRechE.getSelectedItem().toString() == "Numero Définit"){
            try {
                String sqlE = "SELECT * FROM candidat WHERE (corps_Cand = 'ECPD' and numDefEcpd != '0') and (numDefEcpd like '%"+idRechEcpd+"%' and signe ='tafa')";
                AccesBdd bdd1 = new AccesBdd();
                bdd1.loadDriver();
                ResultSet resultat = bdd1.executeSelect(sqlE);
                while (resultat.next()){
                    afficherEcpd[0] = String.valueOf(resultat.getInt("idCand"));
                    afficherEcpd[1] = resultat.getString("numDefEcpd");
                    afficherEcpd[2] = resultat.getString("nom_Cand");
                    afficherEcpd[3] = resultat.getString("prenom_Cand");
                    afficherEcpd[4] = resultat.getString("corps_Cand");
                    afficherEcpd[5] = resultat.getString("numTel_Cand");
                    afficherEcpd[6] = resultat.getString("adresse_Cand");
                    modelEcpd.addRow(afficherEcpd);
                }
                this.tableEcpd.setModel(modelEcpd);
                bdd1.closeConnection();
            } catch (SQLException ex) {
                JOptionPane.showConfirmDialog(null, "erreur se trouve ice "+ex.getMessage());
            }
        }else if (comboRechE.getSelectedItem().toString() == "Prenom")  {
            try {
                String sqlE = "SELECT * FROM candidat WHERE (corps_Cand = 'ECPD' and numDefEcpd != '0') and (prenom_Cand like '%"+idRechEcpd+"%' and signe ='tafa')";
                AccesBdd bdd1 = new AccesBdd();
                bdd1.loadDriver();
                ResultSet resultat = bdd1.executeSelect(sqlE);
                while (resultat.next()){
                    afficherEcpd[0] = String.valueOf(resultat.getInt("idCand"));
                    afficherEcpd[1] = resultat.getString("numDefEcpd");
                    afficherEcpd[2] = resultat.getString("nom_Cand");
                    afficherEcpd[3] = resultat.getString("prenom_Cand");
                    afficherEcpd[4] = resultat.getString("corps_Cand");
                    afficherEcpd[5] = resultat.getString("numTel_Cand");
                    afficherEcpd[6] = resultat.getString("adresse_Cand");
                    modelEcpd.addRow(afficherEcpd);
                }
                this.tableEcpd.setModel(modelEcpd);
                bdd1.closeConnection();
            } catch (SQLException ex) {
                JOptionPane.showConfirmDialog(null, "erreur se trouve ice "+ex.getMessage());
            }
        }else this.tableEcpd.setModel(modelEcpd);
    }//GEN-LAST:event_btnRechEcpdActionPerformed

    private void tableEcpdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEcpdMouseReleased
        int j = this.tableEcpd.getSelectedRow();
            DefaultTableModel modelDef = (DefaultTableModel)tableEcpd.getModel();
            String idc = (String)modelDef.getValueAt(j, 0);
            int i = JOptionPane.showConfirmDialog(null, "Voulez-vous vraiment enlever ce candidat de la liste", "Confirmation", JOptionPane.YES_NO_CANCEL_OPTION);
            if (i == 0){
                String sql = "update candidat set signe='tsytafa' where idCand = '"+idc+"'";
                AccesBdd accesBdd = new AccesBdd();
                accesBdd.loadDriver();
                accesBdd.executeUpdate(sql);
                accesBdd.closeConnection();
                accesBdd.closeConnection();
                this.tableListeEcpd();
            } 
    }//GEN-LAST:event_tableEcpdMouseReleased

    private void AjoutCandEcpdDefMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AjoutCandEcpdDefMouseReleased

    }//GEN-LAST:event_AjoutCandEcpdDefMouseReleased

    private void AjoutCandEcpdDefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjoutCandEcpdDefActionPerformed
        try{
           this.tableListeEcpd1();
            main.removeAll();
            main.repaint();
            main.revalidate();
            main.add(this.listeAjoutEcpdFinal);
            main.repaint();
            main.revalidate();
        }catch (Exception e){

        }

    }//GEN-LAST:event_AjoutCandEcpdDefActionPerformed

    private void rechEcpd1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rechEcpd1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_rechEcpd1MouseReleased

    private void btnRechEcpd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRechEcpd1ActionPerformed
        String idRechEcpd = rechEcpd1.getText();
        rechEcpd1.setText("");
        String []ecpd = {"IdCandidat", "numero Définit", "Nom", "Prénom", "Corps", "Numéro télephone", "Adresse"};
        String []afficherEcpd = new String[12];
        DefaultTableModel modelEcpd = new DefaultTableModel(null, ecpd);
        if (comboRechE1.getSelectedItem().toString() == "Nom"){
            try {
                String sqlE = "SELECT * FROM candidat WHERE (corps_Cand = 'ECPD' and numDefEcpd != '0') and (nom_Cand like '%"+idRechEcpd+"%' and signe ='tsytafa')";
                AccesBdd bdd1 = new AccesBdd();
                bdd1.loadDriver();
                ResultSet resultat = bdd1.executeSelect(sqlE);
                while (resultat.next()){
                    afficherEcpd[0] = String.valueOf(resultat.getInt("idCand"));
                    afficherEcpd[1] = resultat.getString("numDefEcpd");
                    afficherEcpd[2] = resultat.getString("nom_Cand");
                    afficherEcpd[3] = resultat.getString("prenom_Cand");
                    afficherEcpd[4] = resultat.getString("corps_Cand");
                    afficherEcpd[5] = resultat.getString("numTel_Cand");
                    afficherEcpd[6] = resultat.getString("adresse_Cand");
                    modelEcpd.addRow(afficherEcpd);
                }
                this.tableEcpdS.setModel(modelEcpd);
                bdd1.closeConnection();
            } catch (SQLException ex) {
                JOptionPane.showConfirmDialog(null, "erreur se trouve ice "+ex.getMessage());
            }
        }else if (comboRechE1.getSelectedItem().toString() == "Numero Définitive"){
            try {
                String sqlE = "SELECT * FROM candidat WHERE (corps_Cand = 'ECPD' and numDefEcpd != '0') and (numDefEcpd like '%"+idRechEcpd+"%' and signe ='tsytafa')";
                AccesBdd bdd1 = new AccesBdd();
                bdd1.loadDriver();
                ResultSet resultat = bdd1.executeSelect(sqlE);
                while (resultat.next()){
                    afficherEcpd[0] = String.valueOf(resultat.getInt("idCand"));
                    afficherEcpd[1] = resultat.getString("numDefEcpd");
                    afficherEcpd[2] = resultat.getString("nom_Cand");
                    afficherEcpd[3] = resultat.getString("prenom_Cand");
                    afficherEcpd[4] = resultat.getString("corps_Cand");
                    afficherEcpd[5] = resultat.getString("numTel_Cand");
                    afficherEcpd[6] = resultat.getString("adresse_Cand");
                    modelEcpd.addRow(afficherEcpd);
                }
                this.tableEcpdS.setModel(modelEcpd);
                bdd1.closeConnection();
            } catch (SQLException ex) {
                JOptionPane.showConfirmDialog(null, "erreur se trouve ice "+ex.getMessage());
            }
        }else if (comboRechE1.getSelectedItem().toString() == "Prenom")  {
            try {
                String sqlE = "SELECT * FROM candidat WHERE (corps_Cand = 'ECPD' and numDefEcpd != '0') and (prenom_Cand like '%"+idRechEcpd+"%' and signe ='tsytafa')";
                AccesBdd bdd1 = new AccesBdd();
                bdd1.loadDriver();
                ResultSet resultat = bdd1.executeSelect(sqlE);
                while (resultat.next()){
                    afficherEcpd[0] = String.valueOf(resultat.getInt("idCand"));
                    afficherEcpd[1] = resultat.getString("numDefEcpd");
                    afficherEcpd[2] = resultat.getString("nom_Cand");
                    afficherEcpd[3] = resultat.getString("prenom_Cand");
                    afficherEcpd[4] = resultat.getString("corps_Cand");
                    afficherEcpd[5] = resultat.getString("numTel_Cand");
                    afficherEcpd[6] = resultat.getString("adresse_Cand");
                    modelEcpd.addRow(afficherEcpd);
                }
                this.tableEcpdS.setModel(modelEcpd);
                bdd1.closeConnection();
            } catch (SQLException ex) {
                JOptionPane.showConfirmDialog(null, "erreur se trouve ice "+ex.getMessage());
            }
        }else this.tableEcpdS.setModel(modelEcpd);
    }//GEN-LAST:event_btnRechEcpd1ActionPerformed

    private void tableEcpdSMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEcpdSMouseReleased

            int j = this.tableEcpdS.getSelectedRow();
            DefaultTableModel modelDef = (DefaultTableModel)tableEcpdS.getModel();
            String idc = (String)modelDef.getValueAt(j, 0);
            int i = JOptionPane.showConfirmDialog(null, "Voulez-vous vraiment Ajouter ce candidat à la liste finale", "Confirmation", JOptionPane.YES_NO_CANCEL_OPTION);
            if (i == 0){
                String sql = "update candidat set signe='tafa' where idCand = '"+idc+"'";
                AccesBdd accesBdd = new AccesBdd();
                accesBdd.loadDriver();
                accesBdd.executeUpdate(sql);
                accesBdd.closeConnection();
                accesBdd.closeConnection();
                this.tableListeEcpd1();
            } 

    }//GEN-LAST:event_tableEcpdSMouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.tableListeEcpd();
        try{
            
            main.removeAll();
            main.repaint();
            main.revalidate();
            main.add(listeEcpdFinal);
            main.repaint();
            main.revalidate();

        }catch (Exception e){

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        try{
           main.removeAll();
           main.repaint();
           main.revalidate();
           main.add(this.listeEcpdFinal);
           main.repaint();
           main.revalidate();
           this.tableListeEcpd();
          
       }catch (Exception e){
           
       }
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnImprimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimActionPerformed
        MessageFormat header = new MessageFormat("Liste des Candidat 2022 :");
        MessageFormat footer = new MessageFormat("Page{0, number, integer}");
        try{
            
            tableEcpd.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch(java.awt.print.PrinterException e)
        {
          System.err.format("Erreur d'impression", e.getMessage());
        }
    }//GEN-LAST:event_btnImprimActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AjoutCandEcpdDef;
    private javax.swing.JButton btnImprim;
    private javax.swing.JButton btnRechEcpd;
    private javax.swing.JButton btnRechEcpd1;
    private javax.swing.JComboBox<String> comboRechE;
    private javax.swing.JComboBox<String> comboRechE1;
    private javax.swing.JDesktopPane desktopEcpd2;
    private javax.swing.JDesktopPane desktopEcpd3;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel listeAjoutEcpdFinal;
    private javax.swing.JPanel listeEcpdFinal;
    private javax.swing.JPanel main;
    private javax.swing.JTextField rechEcpd;
    private javax.swing.JTextField rechEcpd1;
    private javax.swing.JTable tableEcpd;
    private javax.swing.JTable tableEcpdS;
    // End of variables declaration//GEN-END:variables
}
